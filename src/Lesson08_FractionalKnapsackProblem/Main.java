/*
Надо максимизировать количество калорий которые хотим положить в рюкзак
Входные данные:
1. Вес предметов W1, W2 ... Wn
2. Ценность предметов (калории цена и тд) V1, V2 ... Vn
3. вместимость рюкзака W
4. количество объектов n

Выходные данные:
максимальное значение ценности которое помещается в рюкзак с вместимостью W

Жадный алгоритм:
1. сортируем объекты по удельной ценности
2. выбираем объект с наибольшей удельной ценностью
3. Если объект помещается в рюкзак полностью - положить полностью
4. Если не помещается полностью, то взять ту часть которая помещается
5. Вернуть полученную общую ценность

Сложность алгоритма
Сортировка удельных ценностей - O(n * log(n))
Вычисление того сколько объектов поместится в рюкзак O(n)
Итоговая сложность - O(n * log(n) + O(n)) = O(n * log(n)
*/


package Lesson08_FractionalKnapsackProblem;

public class Main {
    public static void main(String[] args) {

    }


}
